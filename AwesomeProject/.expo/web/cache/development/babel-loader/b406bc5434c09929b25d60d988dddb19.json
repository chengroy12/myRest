{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ngcheukfung/myRest/AwesomeProject/screens/ProductsScreen.js\";\nimport React, { Component } from 'react';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { List } from \"react-native-web/dist/index\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Divider, Header, ListItem, Icon, SearchBar } from 'react-native-elements';\nimport { Card } from 'react-native-shadow-cards';\nimport { Ionicons } from '@expo/vector-icons';\nimport { get_products_list } from \"../services/Api\";\n\nvar ProductsScreen = function (_Component) {\n  _inherits(ProductsScreen, _Component);\n\n  function ProductsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProductsScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductsScreen).call(this, props));\n    _this.componentsMounted = false;\n\n    _this.pressRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      get_products_list().then(function (response) {\n        _this.setState({\n          isLoading: false,\n          dataSource: response.results,\n          refreshing: false\n        });\n      });\n    };\n\n    _this.pressedAdd = function (item_id) {\n      _this.props.navigation.navigate('Order', {\n        product_id: item_id\n      });\n    };\n\n    _this.logout = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n            case 2:\n              _this.props.navigation.navigate(\"AuthLoading\");\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      isLoading: true,\n      refreshing: false,\n      search: null,\n      width: Dimensions.get('window').width / 2 - 20\n    };\n    _this.pressedAdd = _this.pressedAdd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProductsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.componentsMounted = true;\n\n      if (this.componentsMounted) {\n        AsyncStorage.getItem(\"username\").then(function (username) {\n          console.log(username);\n\n          _this2.setState({\n            username: username\n          });\n        });\n      }\n\n      return get_products_list().then(function (response) {\n        if (response.detail == \"Invalid token.\") {\n          _this2.props.navigation.navigate('Login');\n        }\n\n        if (_this2.componentsMounted) {\n          _this2.setState({\n            isLoading: false,\n            dataSource: response.results,\n            refreshing: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.componentsMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            padding: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        }, React.createElement(ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          }\n        }));\n      }\n\n      var username = this.state.username;\n      var cols = 2;\n      return React.createElement(SafeAreaView, {\n        style: {\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: \"#b3e6ff\",\n        barStyle: \"dark-content\",\n        hidden: true,\n        translucent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }), React.createElement(View, {\n        style: {\n          height: 100,\n          backgroundColor: 'orange',\n          justifyContent: 'space-between',\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      }, \"Hi,\", username), React.createElement(TouchableOpacity, {\n        title: \"Press me\",\n        onPress: function onPress() {\n          return _this3.logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }, \"Logout \"))), React.createElement(View, {\n        style: {\n          marginBottom: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        keyExtractor: function keyExtractor(item) {\n          return item.name;\n        },\n        horizontal: false,\n        numColumns: cols,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            }\n          }, React.createElement(Card, {\n            style: {\n              padding: 10,\n              margin: 10,\n              width: _this3.state.width\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            }\n          }, React.createElement(TouchableOpacity, {\n            title: \"Press me\",\n            onPress: function onPress() {\n              return _this3.pressedAdd(item.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            }\n          }, React.createElement(Image, {\n            style: {\n              height: _this3.state.width - 20,\n              width: _this3.state.width - 20\n            },\n            source: {\n              uri: item.picture\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            }\n          }), React.createElement(View, {\n            style: {\n              height: 100\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontWeight: 'bold',\n              fontSize: 40\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            }\n          }, item.name)), React.createElement(Text, {\n            style: {\n              fontWeight: '300',\n              color: 'grey',\n              fontSize: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            }\n          }, item.description), React.createElement(Text, {\n            style: {\n              fontSize: 30\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            }\n          }, \"Price: $\", item.price))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }\n      })));\n    }\n  }]);\n\n  return ProductsScreen;\n}(Component);\n\nProductsScreen.navigationOptions = {\n  title: 'Product'\n};\nexport { ProductsScreen as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/ngcheukfung/myRest/AwesomeProject/screens/ProductsScreen.js"],"names":["React","Component","List","Divider","Header","ListItem","Icon","SearchBar","Card","Ionicons","get_products_list","ProductsScreen","props","componentsMounted","pressRefresh","setState","refreshing","then","response","isLoading","dataSource","results","pressedAdd","item_id","navigation","navigate","product_id","logout","AsyncStorage","clear","state","search","width","Dimensions","get","bind","getItem","username","console","log","detail","flex","padding","cols","flexDirection","height","backgroundColor","justifyContent","fontWeight","fontSize","marginBottom","item","name","margin","id","uri","picture","color","description","price","navigationOptions","title","styles","StyleSheet","create"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;SAKEC,I;;;;;;;;;;;;AAaF,SACEC,OADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,SALF,QAMO,uBANP;AAOA,SAASC,IAAT,QAAqB,2BAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAIA,SAASC,iBAAT;;IAIqBC,c;;;AAGnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AADiB,UAFnBC,iBAEmB,GAFC,KAED;;AAAA,UAiDnBC,YAjDmB,GAiDJ,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd;;AACAN,MAAAA,iBAAiB,GAAGO,IAApB,CAAyB,UAAAC,QAAQ,EAAI;AACnC,cAAKH,QAAL,CAAc;AACZI,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,UAAU,EAAEF,QAAQ,CAACG,OAFT;AAGZL,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD,OAND;AAOD,KA1DkB;;AAAA,UA4DnBM,UA5DmB,GA4DN,UAACC,OAAD,EAAa;AAExB,YAAKX,KAAL,CAAWY,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,EAAwC;AACtCC,QAAAA,UAAU,EAAEH;AAD0B,OAAxC;AAGD,KAjEkB;;AAAA,UAmEnBI,MAnEmB,GAmEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAGDC,YAAY,CAACC,KAAb,EAHC;;AAAA;AAIP,oBAAKjB,KAAL,CAAWY,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnEU;;AAEjB,UAAKK,KAAL,GAAa;AACXX,MAAAA,SAAS,EAAE,IADA;AAEXH,MAAAA,UAAU,EAAE,KAFD;AAGXe,MAAAA,MAAM,EAAE,IAHG;AAIXC,MAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,CAAjC,GAAqC;AAJjC,KAAb;AAMA,UAAKV,UAAL,GAAkB,MAAKA,UAAL,CAAgBa,IAAhB,+BAAlB;AARiB;AASlB;;;;wCAQmB;AAAA;;AAClB,WAAKtB,iBAAL,GAAyB,IAAzB;;AACA,UAAI,KAAKA,iBAAT,EAA4B;AAC1Be,QAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCnB,IAAjC,CAAsC,UAACoB,QAAD,EAAc;AAClDC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,UAAA,MAAI,CAACtB,QAAL,CAAc;AACZsB,YAAAA,QAAQ,EAAEA;AADE,WAAd;AAGD,SALD;AAMD;;AAED,aAAO3B,iBAAiB,GAAGO,IAApB,CAAyB,UAAAC,QAAQ,EAAI;AAC1C,YAAIA,QAAQ,CAACsB,MAAT,IAAmB,gBAAvB,EAAyC;AACvC,UAAA,MAAI,CAAC5B,KAAL,CAAWY,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACD;;AACD,YAAI,MAAI,CAACZ,iBAAT,EAA4B;AAC1B,UAAA,MAAI,CAACE,QAAL,CAAc;AACZI,YAAAA,SAAS,EAAE,KADC;AAEZC,YAAAA,UAAU,EAAEF,QAAQ,CAACG,OAFT;AAGZL,YAAAA,UAAU,EAAE;AAHA,WAAd;AAKD;AACF,OAXM,CAAP;AAcD;;;2CAEsB;AACrB,WAAKH,iBAAL,GAAyB,KAAzB;AACD;;;6BA6BQ;AAAA;;AAGP,UAAI,KAAKiB,KAAL,CAAWX,SAAf,EAA0B;AACxB,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEsB,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,OAAO,EAAE;AAApB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;;AATM,UAWCL,QAXD,GAWc,KAAKP,KAXnB,CAWCO,QAXD;AAcP,UAAMM,IAAI,GAAG,CAAb;AACA,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,SAAD;AACE,QAAA,eAAe,EAAC,SADlB;AAEE,QAAA,QAAQ,EAAC,cAFX;AAGE,QAAA,MAAM,EAAE,IAHV;AAIE,QAAA,WAAW,EAAE,IAJf;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,eAAe,EAAE,QAAhC;AAA2CC,UAAAA,cAAc,EAAE,eAA3D;AAA2EH,UAAAA,aAAa,EAAC;AAAzF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACI,UAAAA,UAAU,EAAC,MAAZ;AAAmBC,UAAAA,QAAQ,EAAC;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAkDZ,QAAlD,CADF,EAEE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,UAAxB;AAAmC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACV,MAAL,EAAN;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACqB,UAAAA,UAAU,EAAC,MAAZ;AAAmBC,UAAAA,QAAQ,EAAC;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,mBADN,CAFF,CATF,EAeE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWV,UADnB;AAEE,QAAA,YAAY,EAAE,sBAAA+B,IAAI;AAAA,iBAAIA,IAAI,CAACC,IAAT;AAAA,SAFpB;AAGE,QAAA,UAAU,EAAE,KAHd;AAIE,QAAA,UAAU,EAAET,IAJd;AAME,QAAA,UAAU,EAAE;AAAA,cAAGQ,IAAH,QAAGA,IAAH;AAAA,iBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAET,cAAAA,OAAO,EAAE,EAAX;AAAeW,cAAAA,MAAM,EAAE,EAAvB;AAA2BrB,cAAAA,KAAK,EAAE,MAAI,CAACF,KAAL,CAAWE;AAA7C,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE,oBAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC,UAAxB;AAAmC,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACV,UAAL,CAAgB6B,IAAI,CAACG,EAArB,CAAN;AAAA,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AAAET,cAAAA,MAAM,EAAE,MAAI,CAACf,KAAL,CAAWE,KAAX,GAAmB,EAA7B;AAAiCA,cAAAA,KAAK,EAAE,MAAI,CAACF,KAAL,CAAWE,KAAX,GAAmB;AAA3D,aAAd;AAA+E,YAAA,MAAM,EAAE;AACrFuB,cAAAA,GAAG,EAAEJ,IAAI,CAACK;AAD2E,aAAvF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEX,cAAAA,MAAM,EAAE;AAAV,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEG,cAAAA,UAAU,EAAE,MAAd;AAAsBC,cAAAA,QAAQ,EAAE;AAAhC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoDE,IAAI,CAACC,IAAzD,CADF,CAJF,EAQE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEJ,cAAAA,UAAU,EAAE,KAAd;AAAqBS,cAAAA,KAAK,EAAE,MAA5B;AAAoCR,cAAAA,QAAQ,EAAE;AAA9C,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkEE,IAAI,CAACO,WAAvE,CARF,EASE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAET,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwCE,IAAI,CAACQ,KAA7C,CATF,CAFF,CADF,CADU;AAAA,SANd;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAfF,CADF;AAiDD;;;;EA9IyC1D,S;;AAAvBU,c,CAcZiD,iB,GAAoB;AACzBC,EAAAA,KAAK,EAAE;AADkB,C;SAdRlD,c;AAiJrB,IAAMmD,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  AsyncStorage,\n  ActivityIndicator,\n  FlatList,\n  List,\n  RefreshControl,\n  ScrollView,\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  Image,\n  Dimensions,\n  TouchableOpacity,\n  SafeAreaView,\n  StatusBar\n} from 'react-native';\nimport {\n  Divider,\n  Header,\n  ListItem,\n  Icon,\n  SearchBar,\n} from 'react-native-elements';\nimport { Card } from 'react-native-shadow-cards';\nimport { Ionicons } from '@expo/vector-icons';\n\n\n\nimport { get_products_list } from '../services/Api';\n\n\n\nexport default class ProductsScreen extends Component {\n  componentsMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      refreshing: false,\n      search: null,\n      width: Dimensions.get('window').width / 2 - 20,\n    }\n    this.pressedAdd = this.pressedAdd.bind(this)\n  }\n\n  static navigationOptions = {\n    title: 'Product',\n  };\n\n  // componentDidMount means preparation before display the page\n  // in following, it does getting data from server\n  componentDidMount() {\n    this.componentsMounted = true;\n    if (this.componentsMounted) {\n      AsyncStorage.getItem(\"username\").then((username) => {\n        console.log(username);\n        this.setState({\n          username: username,\n        });\n      });\n    }\n\n    return get_products_list().then(response => {\n      if (response.detail == \"Invalid token.\") {\n        this.props.navigation.navigate('Login');\n      }\n      if (this.componentsMounted) {\n        this.setState({\n          isLoading: false,\n          dataSource: response.results,\n          refreshing: false,\n        });\n      }\n    });\n\n\n  }\n\n  componentWillUnmount() {\n    this.componentsMounted = false;\n  }\n\n  // following function is for drag the page down for refresh data\n  pressRefresh = () => {\n    this.setState({ refreshing: true });\n    get_products_list().then(response => {\n      this.setState({\n        isLoading: false,\n        dataSource: response.results,\n        refreshing: false,\n      });\n    });\n  }\n\n  pressedAdd = (item_id) => {\n    // console.log(\"Pressed Add\", item)\n    this.props.navigation.navigate('Order', {\n      product_id: item_id\n    });\n  }\n  \n  logout = async () => {\n    // Authentication Part\n   \n    await AsyncStorage.clear();\n    this.props.navigation.navigate(\"AuthLoading\");\n  }\n\n  // this is the main function to display a page\n  render() {\n    // following means that data is not ready\n    // will display a ActivityIndicator (loading animation)\n    if (this.state.isLoading) {\n      return (\n        <View style={{ flex: 1, padding: 20 }}>\n          <ActivityIndicator />\n        </View>\n      )\n    }\n\n    const { username } = this.state\n    // If data is reading\n    // render the product list\n    const cols = 2;\n    return (\n      <SafeAreaView style={{ flexDirection: 'column' }}>\n        {/* hiding status bar  */}\n        <StatusBar\n          backgroundColor=\"#b3e6ff\"\n          barStyle=\"dark-content\"\n          hidden={true}\n          translucent={true}\n        />\n        {/* header bar  */}\n        <View style={{ height: 100, backgroundColor: 'orange' , justifyContent: 'space-between',flexDirection:\"row\"}}>\n          <Text style={{fontWeight:'bold',fontSize:20}}>Hi,{username}</Text>\n          <TouchableOpacity title=\"Press me\" onPress={() => this.logout() } >\n                <Text style={{fontWeight:'bold',fontSize:20}}>Logout </Text>\n            </TouchableOpacity>\n        </View>\n        <View style={{ marginBottom: 200 }}>\n\n          <FlatList\n            data={this.state.dataSource}\n            keyExtractor={item => item.name}\n            horizontal={false}\n            numColumns={cols}\n\n            renderItem={({ item }) => (\n              <View >\n                <Card style={{ padding: 10, margin: 10, width: this.state.width }}>\n                  {/* making whole product card can be touchable with TouchableOpacity instead of using button */}\n                  <TouchableOpacity title=\"Press me\" onPress={() => this.pressedAdd(item.id)} >\n                    <Image style={{ height: this.state.width - 20, width: this.state.width - 20 }} source={{\n                      uri: item.picture,\n                    }} />\n                    <View style={{ height: 100 }}>\n                      <Text style={{ fontWeight: 'bold', fontSize: 40 }}>{item.name}</Text>\n\n                    </View>\n                    <Text style={{ fontWeight: '300', color: 'grey', fontSize: 20 }}>{item.description}</Text>\n                    <Text style={{ fontSize: 30 }}>Price: ${item.price}</Text>\n\n\n                  </TouchableOpacity>\n                </Card>\n              </View>\n            )}\n          />\n\n        </View>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n\n})\n"]},"metadata":{},"sourceType":"module"}