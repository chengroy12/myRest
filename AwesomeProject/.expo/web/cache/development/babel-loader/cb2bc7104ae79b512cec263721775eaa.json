{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ngcheukfung/myRest/AwesomeProject/screens/RecordScreen.js\";\nimport { get_orders_list } from \"../services/Api\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState, Component } from \"react\";\nimport { Card, CardTitle, CardContent } from 'react-native-elements';\n\nvar RecordScreen = function (_Component) {\n  _inherits(RecordScreen, _Component);\n\n  function RecordScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecordScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecordScreen).call(this, props));\n    _this.componentsMounted = false;\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(RecordScreen, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"Entering Record Page\");\n      this.componentsMounted = false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var name, userid;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"username\"));\n\n            case 2:\n              name = _context.sent;\n              console.log(\"name =  \" + name + \"...\");\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user_id'));\n\n            case 6:\n              userid = _context.sent;\n              console.log(\"id =  \" + userid + \"...\");\n              this.setState({\n                username: name,\n                id: userid\n              });\n              return _context.abrupt(\"return\", get_orders_list().then(function (response) {\n                console.log(response);\n                response.json().then(function (jsonText) {\n                  console.log(\"Fetch result\");\n                  console.log(jsonText.results[0].customer.username);\n\n                  _this2.setState({\n                    recordList: jsonText.results,\n                    isLoadedDoctor: true\n                  });\n                });\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var generaterecord = function generaterecord() {\n        console.log(\"name: \" + _this3.state.username);\n        console.log(\"id\" + _this3.state.id);\n        var recordInfo = [];\n\n        if (_this3.state.recordList) {\n          for (i = 0; i < _this3.state.recordList.length; i++) {\n            console.log(_this3.state.recordList[i]);\n            var customer = _this3.state.recordList[i].customer;\n            var product = _this3.state.recordList[i].product;\n\n            if (_this3.state.id == customer.id) {\n              recordInfo.push(React.createElement(Card, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                }\n              }, React.createElement(Text, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                }\n              }, _this3.state.recordList[i].invoice_no), React.createElement(Text, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                }\n              }, product.name)));\n            }\n          }\n        }\n\n        return recordInfo;\n      };\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, generaterecord());\n    }\n  }]);\n\n  return RecordScreen;\n}(Component);\n\nRecordScreen.navigationOptions = {\n  title: 'Record'\n};\nexport { RecordScreen as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/ngcheukfung/myRest/AwesomeProject/screens/RecordScreen.js"],"names":["get_orders_list","React","useState","Component","Card","CardTitle","CardContent","RecordScreen","props","componentsMounted","state","console","log","AsyncStorage","getItem","name","userid","setState","username","id","then","response","json","jsonText","results","customer","recordList","isLoadedDoctor","generaterecord","recordInfo","i","length","product","push","invoice_no","navigationOptions","title","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import { get_orders_list } from '../services/Api';\nimport { StyleSheet, ScrollView, AsyncStorage,View ,Text} from 'react-native';\nimport React, {useState, Component } from \"react\";\nimport {Card,CardTitle,CardContent} from 'react-native-elements';\nexport default class RecordScreen extends Component {\n    componentsMounted = false;\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        \n            \n        }\n\n\n    }\n\n    static navigationOptions = {\n        title: 'Record',\n    };\n\n    componentWillUnmount() {\n        console.log(\"Entering Record Page\");\n        this.componentsMounted = false;\n      }\n\n    async componentDidMount() {\n        var name =  await AsyncStorage.getItem(\"username\")\n        console.log(\"name =  \" + name +\"...\");\n        var userid =  await AsyncStorage.getItem('user_id')\n        console.log(\"id =  \" + userid +\"...\");\n\n        this.setState(\n            {\n                username:name,\n                id:userid\n            }\n\n        )\n\n        return get_orders_list().then(response => {\n            console.log(response);\n            response.json().then(\n                jsonText=>{\n                  console.log(\"Fetch result\");\n                  console.log(jsonText.results[0].customer.username);\n                //   console.log(typeof jsonText);\n                  this.setState({recordList:jsonText.results,\n                    isLoadedDoctor:true});\n                }\n                );\n        });\n        \n            \n\n    }\n\n\n\n    render() {\n        var generaterecord = ()=>{\n            \n            console.log(\"name: \"+ this.state.username)\n            console.log(\"id\"+this.state.id)\n            var recordInfo = [];\n            \n\n            if(this.state.recordList){\n                \n            for (i = 0; i < this.state.recordList.length; i++) {\n               console.log(this.state.recordList[i]);\n               var customer = this.state.recordList[i].customer;\n               var product = this.state.recordList[i].product;\n                if (this.state.id == customer.id) {\n                \n                    recordInfo.push(\n                        (\n                            \n                            \n                            <Card>\n                            <Text>\n                                {this.state.recordList[i].invoice_no}\n                            </Text>\n                            <Text>\n                            {product.name}\n                            </Text>\n                            \n\n                            \n                        </Card>)\n\n                    );\n\n                }\n\n            }\n        }\n        return recordInfo;\n    }\n    \n        \n    \n        return (\n            <ScrollView>\n              {generaterecord()}\n            </ScrollView>\n        )    \n    }\n}\n    \n\n\n    \n\n\n\nconst styles = StyleSheet.create({\n\n\n\n\n\n})"]},"metadata":{},"sourceType":"module"}