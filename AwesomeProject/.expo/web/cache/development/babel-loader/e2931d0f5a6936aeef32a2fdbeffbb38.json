{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ngcheukfung/myRest/AwesomeProject/screens/AuthLoadingScreen.js\";\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar AuthLoadingScreen = function (_Component) {\n  _inherits(AuthLoadingScreen, _Component);\n\n  function AuthLoadingScreen(props) {\n    var _this;\n\n    _classCallCheck(this, AuthLoadingScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthLoadingScreen).call(this, props));\n\n    _this._bootstrapAsync = function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user_token'));\n\n            case 2:\n              userToken = _context.sent;\n\n              _this.props.navigation.navigate(userToken ? 'App' : 'Auth');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this._bootstrapAsync();\n\n    return _this;\n  }\n\n  _createClass(AuthLoadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }), React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }));\n    }\n  }]);\n\n  return AuthLoadingScreen;\n}(Component);\n\nexport { AuthLoadingScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/ngcheukfung/myRest/AwesomeProject/screens/AuthLoadingScreen.js"],"names":["React","Component","AuthLoadingScreen","props","_bootstrapAsync","AsyncStorage","getItem","userToken","navigation","navigate","styles","container","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","padding"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;IASqBC,iB;;;AACnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,UAMnBC,eANmB,GAMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQC,YAAY,CAACC,OAAb,CAAqB,YAArB,CADR;;AAAA;AACVC,cAAAA,SADU;;AAIhB,oBAAKJ,KAAL,CAAWK,UAAX,CAAsBC,QAAtB,CAA+BF,SAAS,GAAG,KAAH,GAAW,MAAnD;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANC;;AAEjB,UAAKH,eAAL;;AAFiB;AAGlB;;;;6BAYQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAvB4CV,S;;SAA1BC,iB;AA0BrB,IAAMQ,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE,SAJR;AAKXC,IAAAA,OAAO,EAAE;AALE;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  ActivityIndicator,\n  AsyncStorage,\n  StatusBar,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nexport default class AuthLoadingScreen extends Component {\n  constructor(props) {\n    super(props);\n    this._bootstrapAsync();\n  }\n\n  // Fetch the token from storage then navigate to our appropriate place\n  _bootstrapAsync = async () => {\n    const userToken = await AsyncStorage.getItem('user_token');\n    // This will switch to the App screen or Auth screen and this loading\n    // screen will be unmounted and thrown away.\n    this.props.navigation.navigate(userToken ? 'App' : 'Auth');\n  };\n\n  // Render any loading content that you like here\n  // Activity Indicator = loading pattern/effects\n  render() {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator />\n        <StatusBar barStyle=\"default\" />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}