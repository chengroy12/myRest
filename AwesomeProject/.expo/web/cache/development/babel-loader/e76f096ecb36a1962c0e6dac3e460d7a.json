{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ngcheukfung/myRest/AwesomeProject/screens/ProfileScreen.js\";\nimport React, { Component } from 'react';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-elements';\n\nvar RegisterScreen = function (_Component) {\n  _inherits(RegisterScreen, _Component);\n\n  function RegisterScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterScreen).call(this, props));\n\n    _this.logout = function _callee() {\n      var keys;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              keys = ['user_id', 'user_email', 'user_token'];\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n            case 3:\n              _this.props.navigation.navigate(\"AuthLoading\");\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(RegisterScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }, React.createElement(Button, {\n        title: \"Logout\",\n        onPress: function onPress() {\n          return _this2.logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }));\n    }\n  }]);\n\n  return RegisterScreen;\n}(Component);\n\nexport { RegisterScreen as default };","map":{"version":3,"sources":["/Users/ngcheukfung/myRest/AwesomeProject/screens/ProfileScreen.js"],"names":["React","Component","Button","RegisterScreen","props","logout","keys","AsyncStorage","clear","navigation","navigate","state","flex","justifyContent","alignItems"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAKA,SACEC,MADF,QAEO,uBAFP;;IAQqBC,c;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,UAkBnBC,MAlBmB,GAkBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,cAAAA,IAFG,GAEI,CAAC,SAAD,EAAY,YAAZ,EAA0B,YAA1B,CAFJ;AAAA;AAAA,+CAGDC,YAAY,CAACC,KAAb,EAHC;;AAAA;AAIP,oBAAKJ,KAAL,CAAWK,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlBU;;AAEjB,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAIlB;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAC,QAA1B;AAAoCC,UAAAA,UAAU,EAAE;AAAhD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAG;AAAA,iBAAM,MAAI,CAACT,MAAL,EAAN;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EAjByCJ,S;;SAAvBE,c","sourcesContent":["import React, {Component} from 'react';\nimport {\n  AsyncStorage,\n  View\n} from 'react-native';\nimport {\n  Button\n} from 'react-native-elements';\n\n\n//import { register } from '../services/Api';\n\n\nexport default class RegisterScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1, justifyContent:'center', alignItems: 'center' }}>\n        <Button\n          // submit button\n          title='Logout'\n          onPress={ () => this.logout() }\n        />\n      </View>\n    )\n  }\n\n  logout = async () => {\n    // Authentication Part\n    let keys = ['user_id', 'user_email', 'user_token'];\n    await AsyncStorage.clear();\n    this.props.navigation.navigate(\"AuthLoading\");\n  }\n\n}"]},"metadata":{},"sourceType":"module"}