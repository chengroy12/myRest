{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ngcheukfung/myRest/AwesomeProject/screens/LoginScreen.js\";\nimport React, { Component } from \"react\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Button, Icon, Input } from \"react-native-elements\";\nimport { login } from \"../services/Api\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomeScreen).call(this, props));\n\n    _this.submitLogin = function _callee(username, password) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(login(username, password).then(function (response) {\n                console.log(response);\n\n                if (response.token != undefined) {\n                  AsyncStorage.setItem(\"user_token\", response.token);\n                  console.log(\"Set Token : \" + response.token);\n                  AsyncStorage.setItem(\"user_id\", response.user_id.toString());\n                  console.log(\"Set ID: \" + response.user_id.toString());\n                  AsyncStorage.setItem(\"username\", response.username);\n                  console.log(\"Token:\" + response.token + \" User ID:\" + response.user_id.toString() + \" Username:\" + response.username);\n\n                  _this.props.navigation.navigate(\"App\");\n                } else {\n                  _this.setState({\n                    isError: true\n                  });\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.inputUsername = function (value) {\n      _this.setState({\n        username: value\n      });\n    };\n\n    _this.inputPassword = function (value) {\n      _this.setState({\n        password: value\n      });\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      isError: false\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigate = this.props.navigation.navigate;\n      var errorMessage = null;\n\n      if (this.state.isError) {\n        errorMessage = \"Username / Password invalid. Please try again!\";\n      }\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: \"#b3e6ff\",\n        barStyle: \"dark-content\",\n        hidden: true,\n        translucent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }), React.createElement(ImageBackground, {\n        source: require(\"../assets/images/login_bg.jpeg\"),\n        style: styles.imageBackground,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/images/icon.png\"),\n        style: styles.loginLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }), React.createElement(Input, {\n        placeholder: \"USERNAME\",\n        returnKeyType: \"next\",\n        textContentType: \"username\",\n        containerStyle: styles.inputContainer,\n        inputContainerStyle: styles.input,\n        underlineColorAndroid: \"white\",\n        onChangeText: function onChangeText(value) {\n          return _this2.inputUsername(value);\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"person\",\n          size: 24,\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        }\n      }), React.createElement(Input, {\n        placeholder: \"PASSW0RD\",\n        secureTextEntry: true,\n        returnKeyType: \"go\",\n        textContentType: \"password\",\n        containerStyle: styles.inputContainer,\n        inputContainerStyle: styles.input,\n        underlineColorAndroid: \"white\",\n        onChangeText: function onChangeText(value) {\n          return _this2.inputPassword(value);\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"lock\",\n          size: 24,\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          }\n        }),\n        errorMessage: errorMessage,\n        errorStyle: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        }\n      }), React.createElement(Button, {\n        title: \"LOGIN\",\n        containerStyle: styles.loginButton,\n        titleStyle: styles.buttonText,\n        onPress: function onPress() {\n          return _this2.submitLogin(_this2.state.username, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }), React.createElement(Button, {\n        title: \"Register\",\n        type: \"clear\",\n        titleStyle: styles.registerText,\n        onPress: function onPress() {\n          return navigate(\"Register\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        }\n      }))));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  imageBackground: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  loginLogo: {\n    resizeMode: \"contain\",\n    width: \"50%\",\n    height: \"50%\",\n    marginBottom: 10\n  },\n  inputContainer: {\n    marginVertical: 5\n  },\n  input: {\n    backgroundColor: \"white\",\n    opacity: 0.7,\n    borderRadius: 15\n  },\n  errorMessage: {\n    color: 'red'\n  },\n  registerText: {\n    color: \"#00acc1\",\n    textAlign: \"right\"\n  },\n  loginButton: {\n    backgroundColor: \"#00acc1\",\n    borderRadius: 15,\n    marginVertical: 5\n  }\n});","map":{"version":3,"sources":["/Users/ngcheukfung/myRest/AwesomeProject/screens/LoginScreen.js"],"names":["React","Component","Button","Icon","Input","login","HomeScreen","props","submitLogin","username","password","then","response","console","log","token","undefined","AsyncStorage","setItem","user_id","toString","navigation","navigate","setState","isError","inputUsername","value","inputPassword","state","errorMessage","styles","container","Platform","OS","require","imageBackground","loginLogo","inputContainer","input","loginButton","buttonText","registerText","StyleSheet","create","flex","alignItems","width","height","resizeMode","marginBottom","marginVertical","backgroundColor","opacity","borderRadius","color","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  AsyncStorage,\n  Image,\n  ImageBackground,\n  StyleSheet,\n  ScrollView,\n  View,\n  KeyboardAvoidingView,\n  Platform,\n  StatusBar\n} from \"react-native\";\nimport {\n  Button,\n  Icon,\n  Input,\n} from \"react-native-elements\";\n\nimport { login } from \"../services/Api\";\n\nexport default class HomeScreen extends Component {\n  // using constructor function to initialize state\n  constructor(props) {\n    super(props); // this must included\n    // all self-defined state can initialize in it\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isError: false\n    };\n  }\n\n  // navigationOptions used to configure screen\n \n  // a function for handle the login button pressed\n  submitLogin = async (username, password) => {\n    // call login function from services/Api.js with username and password\n    await login(username, password).then(response => {\n      // console.log funcion can help to to display message in console\n      // it is useful for debug use\n      console.log(response);\n      if (response.token != undefined) {\n        // AsyncStorage is a react naive build-in component for\n        // storing data to mobile local storage\n        AsyncStorage.setItem(\"user_token\", response.token);\n        console.log(\"Set Token : \"+ response.token);\n        AsyncStorage.setItem(\"user_id\", response.user_id.toString());\n        console.log(\"Set ID: \" +response.user_id.toString());\n        AsyncStorage.setItem(\"username\", response.username);\n        console.log(\"Token:\"+response.token+\" User ID:\"+response.user_id.toString()+\" Username:\"+response.username);\n        // following function is used to switch to other screen\n        // with the screen name defined in navigation/MainTabNavigator.js\n        this.props.navigation.navigate(\"App\");\n      } else {\n        // use this.setState function to update state\n        this.setState({ isError: true });\n      }\n    });\n  };\n\n  // inputUsername is a function handle the username inupt\n  inputUsername = (value) => {\n    // everytime input value entered, update the username in state\n    this.setState({ username: value });\n  };\n\n  // inputPassword is a function handle the password inupt\n  inputPassword = (value) => {\n    this.setState({ password: value });\n  };\n\n  // main function to render the UI components\n  render() {\n    // get the navigate function from this.props.navigation\n    // used in line 164\n    const { navigate } = this.props.navigation;\n    let errorMessage = null;\n    if (this.state.isError) {\n      errorMessage = \"Username / Password invalid. Please try again!\";\n    }\n\n    // return the UI components\n    return (\n      // <ImageBackground> component is similar with the web is background-image\n      <KeyboardAvoidingView style={styles.container} behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}>\n        <StatusBar\n          backgroundColor=\"#b3e6ff\"\n          barStyle=\"dark-content\"\n          hidden={true}\n          translucent={true}\n        />\n      <ImageBackground\n        source={require(\"../assets/images/login_bg.jpeg\")}\n        style={styles.imageBackground}\n        // https://facebook.github.io/react-native/docs/imagebackground\n      >\n        <ScrollView contentContainerStyle={styles.container}>\n          <Image\n            // <Image> component displaying different types of images, \n            // including network images, static resources, temporary local images,\n            // and images from local disk, such as the camera roll.\n            source={require(\"../assets/images/icon.png\")}\n            // use style defined below\n            style={styles.loginLogo}\n            // https://facebook.github.io/react-native/docs/image\n          />\n          <Input\n            // <Input> component from react-native-elements\n            placeholder=\"USERNAME\"\n            returnKeyType=\"next\"\n            textContentType=\"username\"\n            // following 2 container style for controlling different container\n            // https://react-native-training.github.io/react-native-elements/docs/input.html#styles-explanation\n            containerStyle={styles.inputContainer}\n            inputContainerStyle={styles.input}\n            underlineColorAndroid=\"white\"\n            // onChangeText prop bind to the inputUsername function\n            onChangeText={value => this.inputUsername(value)}\n            leftIcon={\n              <Icon\n                name='person'\n                size={24}\n                color='black'\n              />\n            }\n            // https://react-native-training.github.io/react-native-elements/docs/input.html\n          />\n          <Input\n            placeholder=\"PASSW0RD\"\n            // secureTextEntry prop used to masked the input for password input\n            secureTextEntry\n            returnKeyType=\"go\"\n            textContentType=\"password\"\n            containerStyle={styles.inputContainer}\n            inputContainerStyle={styles.input}\n            underlineColorAndroid=\"white\"\n            onChangeText={value => this.inputPassword(value)}\n            leftIcon={\n              <Icon\n                name='lock'\n                size={24}\n                color='black'\n              />\n            }\n            // display error message which defined in line 74-77\n            errorMessage={errorMessage}\n            // error message styling\n            errorStyle={styles.errorMessage}\n          />\n          <Button\n            // <Button> component from react-native-elements \n            // button with text \"LOGIN\"\n            title=\"LOGIN\"\n            // button style\n            containerStyle={styles.loginButton}\n            // button text style\n            titleStyle={styles.buttonText}\n            // onPress prop bind to submitLogin function to handle submit login\n            onPress={() =>\n              // when submit login, pass username and password to it\n              // whihc 2 variables are store in state\n              this.submitLogin(this.state.username, this.state.password)\n            }\n            // https://react-native-training.github.io/react-native-elements/docs/button.html\n          />\n          <Button\n            // Register button\n            title=\"Register\"\n            // type can be solid (default), clear and outline\n            type=\"clear\"\n            titleStyle={styles.registerText}\n            // onPress prop bind to navigate function whihc to switch to Register screen\n            onPress={() => navigate(\"Register\")}\n          />\n        </ScrollView>\n        {/* </ScrollView> component is a container component to enable scroll function */}\n        {/* https://facebook.github.io/react-native/docs/scrollview */}\n      </ImageBackground>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\n\n// defined all UI component style by using StyleSheet in React Native\n// A StyleSheet is an abstraction similar to CSS StyleSheets\n// https://facebook.github.io/react-native/docs/stylesheet\n// Flexbox : https://facebook.github.io/react-native/docs/flexbox\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    \n  },\n  imageBackground: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  loginLogo: {\n    resizeMode: \"contain\",\n    width: \"50%\",\n    height: \"50%\",\n    marginBottom: 10\n  },\n  inputContainer: {\n    marginVertical: 5\n  },\n  input: {\n    backgroundColor: \"white\",\n    opacity: 0.7,\n    borderRadius: 15\n  },\n  errorMessage: {\n    color: 'red'\n  },\n  registerText: {\n    color: \"#00acc1\",\n    textAlign: \"right\"\n  },\n  loginButton: {\n    backgroundColor: \"#00acc1\",\n    borderRadius: 15,\n    marginVertical: 5\n  },\n});"]},"metadata":{},"sourceType":"module"}