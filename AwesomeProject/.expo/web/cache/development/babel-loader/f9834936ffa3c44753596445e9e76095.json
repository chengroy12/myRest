{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar BASE_API_URL = \"http://192.168.1.195:8000/\";\nvar API_TOKEN = \"Token c0f4ebdcbdf194dc6ca4e85caf81d0ea923290a2\";\nexport var login = function login(username, password) {\n  if (username == \"\" || password == \"\") {\n    return;\n  }\n\n  var data = {\n    username: username,\n    password: password\n  };\n  var url = BASE_API_URL + \"api-token-auth/\";\n  console.log(\"POST : \" + url);\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    return jsonResponse;\n  }).catch(function (err) {\n    return console.log(\"Login failure:\\n\" + err);\n  });\n};\nexport var get_orders_list = function get_orders_list() {\n  var url;\n  return _regeneratorRuntime.async(function get_orders_list$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = BASE_API_URL + \"orders/\";\n          console.log(\"GET : \" + url);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(get_user_info(\"user_token\"));\n\n        case 4:\n          _context.t0 = _context.sent;\n          token = \"Token \" + _context.t0;\n          return _context.abrupt(\"return\", fetch(url, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n            }\n          }));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var register = function register(username, password) {\n  var data = {\n    username: username,\n    password: password\n  };\n  var url = BASE_API_URL + \"users/\";\n  console.log(\"POST : \" + url);\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": API_TOKEN\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    console.log(\"successful\");\n    return login(jsonResponse.username, password);\n  }).catch(function (err) {\n    return console.log(\"Register failure:\\n\" + err);\n  });\n};\nexport var place_order = function place_order(order) {\n  var product_id, quantity, total_amount, deliver_date, deliver_time, address, url;\n  return _regeneratorRuntime.async(function place_order$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(get_user_info(\"user_id\"));\n\n        case 2:\n          user_id = _context2.sent;\n          product_id = order.product_id, quantity = order.quantity, total_amount = order.total_amount, deliver_date = order.deliver_date, deliver_time = order.deliver_time, address = order.address;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(get_user_info(\"user_token\"));\n\n        case 6:\n          _context2.t0 = _context2.sent;\n          token = \"Token \" + _context2.t0;\n          data = {\n            customer: user_id,\n            product: product_id,\n            quantity: quantity,\n            total_amount: total_amount,\n            deliver_date: deliver_date,\n            deliver_time: deliver_time,\n            address: address\n          };\n          url = BASE_API_URL + \"payment/\";\n          console.log(\"POST : \" + url);\n          return _context2.abrupt(\"return\", fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json\",\n              \"Authorization\": token\n            },\n            body: JSON.stringify(data)\n          }).then(function (response) {\n            return response.json();\n          }).then(function (jsonResponse) {\n            console.log(\"Server create payment successful.\");\n            console.log(jsonResponse);\n            return jsonResponse;\n          }).catch(function (err) {\n            return console.log(\"Order got error:\\n\" + err);\n          }));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var cancel_order = function cancel_order(payment_token) {\n  var url = BASE_API_URL + \"cancel/?token=\" + payment_token;\n  console.log(\"GET : \" + url);\n  return fetch(url).then(function (response) {\n    return console.log(\"Order cancelled\");\n  });\n};\nexport var get_products_list = function get_products_list() {\n  var url;\n  return _regeneratorRuntime.async(function get_products_list$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          url = BASE_API_URL + \"products/\";\n          console.log(\"GET : \" + url);\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(get_user_info(\"user_token\"));\n\n        case 4:\n          _context3.t0 = _context3.sent;\n          token = \"Token \" + _context3.t0;\n          console.log(token);\n          return _context3.abrupt(\"return\", fetch(url, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseJson) {\n            console.log(\"successful.\");\n            return responseJson;\n          }).catch(function (error) {\n            console.error(\"GET product list failure:\\n\" + error);\n          }));\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var get_product_detail = function get_product_detail(product_id) {\n  var url;\n  return _regeneratorRuntime.async(function get_product_detail$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          url = BASE_API_URL + \"products/\" + product_id + \"/\";\n          console.log(\"GET : \" + url);\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(get_user_info(\"user_token\"));\n\n        case 4:\n          _context4.t0 = _context4.sent;\n          token = \"Token \" + _context4.t0;\n          console.log(\"token \" + token);\n          return _context4.abrupt(\"return\", fetch(url, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseJson) {\n            console.log(\"successful.\");\n            return responseJson;\n          }).catch(function (error) {\n            console.error(\"GET product list failure:\\n\" + error);\n          }));\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\nexport var get_user_info = function get_user_info(info) {\n  var value;\n  return _regeneratorRuntime.async(function get_user_info$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(info));\n\n        case 3:\n          value = _context5.sent;\n\n          if (!(value !== null)) {\n            _context5.next = 7;\n            break;\n          }\n\n          console.log(\"getting \" + info + \" successful\");\n          return _context5.abrupt(\"return\", value);\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(\"getting \" + info + \"failure.\");\n          console.error(_context5.t0);\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 9]]);\n};","map":{"version":3,"sources":["/Users/ngcheukfung/myRest/AwesomeProject/services/Api.js"],"names":["BASE_API_URL","API_TOKEN","login","username","password","data","url","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","jsonResponse","catch","err","get_orders_list","get_user_info","token","register","place_order","order","user_id","product_id","quantity","total_amount","deliver_date","deliver_time","address","customer","product","cancel_order","payment_token","get_products_list","responseJson","error","get_product_detail","info","AsyncStorage","getItem","value"],"mappings":"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","sourcesContent":["import { AsyncStorage } from \"react-native\";\n\nvar BASE_API_URL = \"http://192.168.1.195:8000/\";\nvar API_TOKEN = \"Token c0f4ebdcbdf194dc6ca4e85caf81d0ea923290a2\";\n\nexport const login = (username, password) => {\n  if (username == \"\" || password == \"\") {\n    return;\n  }\n\n  var data = { username: username, password: password };\n  var url = BASE_API_URL + \"api-token-auth/\";\n  console.log(\"POST : \" + url);\n\n  return fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json()) // parses response to JSON\n    .then(jsonResponse => {\n      return jsonResponse;\n    })\n    .catch(err => console.log(\"Login failure:\\n\" + err));\n};\nexport const get_orders_list = async () => {\n  var url = BASE_API_URL + \"orders/\";\n  console.log(\"GET : \" + url);\n  token = \"Token \" + (await get_user_info(\"user_token\"));\n  return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    })\n};\n\nexport const register = (username, password) => {\n\n  var data = { username: username, password: password };\n  var url = BASE_API_URL + \"users/\";\n  console.log(\"POST : \" + url);\n\n  return fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": API_TOKEN,\n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json()) // parses response to JSON\n    .then(jsonResponse => {\n        console.log(\"successful\")\n        return login(jsonResponse.username, password);\n    })\n    .catch(err => console.log(\"Register failure:\\n\" + err));\n};\n\nexport const place_order = async (order) => {\n  user_id = await get_user_info(\"user_id\");\n  const { product_id, quantity, total_amount,deliver_date, deliver_time ,address} = order;\n  token = \"Token \" + (await get_user_info(\"user_token\"));\n  data = {\n    customer: user_id,\n    product: product_id,\n    quantity: quantity,\n    total_amount: total_amount,\n    deliver_date: deliver_date,\n    deliver_time: deliver_time,\n    address: address\n  };\n  var url = BASE_API_URL + \"payment/\";\n  console.log(\"POST : \" + url);\n  return fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Authorization\": token\n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json()) // parses response to JSON\n    .then(jsonResponse => {\n      console.log(\"Server create payment successful.\")\n      console.log(jsonResponse)\n      return jsonResponse;\n    })\n    .catch(err => console.log(\"Order got error:\\n\" + err));\n};\n\nexport const cancel_order = (payment_token) => {\n  var url = BASE_API_URL + \"cancel/?token=\" + payment_token;\n  console.log(\"GET : \" + url);\n  return fetch(url)\n    .then(response => console.log(\"Order cancelled\"))\n}\n\nexport const get_products_list = async () => {\n  var url = BASE_API_URL + \"products/\";\n  console.log(\"GET : \" + url);\n  token = \"Token \" + (await get_user_info(\"user_token\"));\n  console.log(token);\n  return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    })\n    .then(response => response.json())\n    .then(responseJson => {\n      console.log(\"successful.\")\n      return responseJson;\n    })\n    .catch(error => {\n      console.error(\"GET product list failure:\\n\" + error);\n    });\n};\n\nexport const get_product_detail = async (product_id) => {\n  var url = BASE_API_URL + \"products/\" + product_id+ \"/\";\n  console.log(\"GET : \" + url);\n  token = \"Token \" + (await get_user_info(\"user_token\"));\n  console.log(\"token \" + token)\n  // var response = await fetch(url, {\n  //   method: \"GET\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     \"Authorization\": token\n  //   },\n  // })\n  // // .then((response)=> {\n  // //   console.log(\"Finished fetching\");\n  // //   console.log(response.json());\n  // // });\n  \n  // console.log(\"Response in get detail function\");\n  // console.log(response);\n  // return response;\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": token\n    }\n  })\n  .then(response => response.json())\n  .then(responseJson => {\n    console.log(\"successful.\")\n    return responseJson;\n  })\n  .catch(error => {\n    console.error(\"GET product list failure:\\n\" + error);\n  });\n}\n\nexport const get_user_info = async (info) => {\n  try {\n    const value = await AsyncStorage.getItem(info);\n    if (value !== null) {\n      console.log(\"getting \" + info + \" successful\");\n      return value;\n    }\n  } catch (error) {\n    console.log(\"getting \" + info + \"failure.\");\n    console.error(error)\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}